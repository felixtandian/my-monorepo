{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/felixtan/Documents/Ebddy%20project/my-monorepo/apps/frontend/src/apis/users.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { db } from '../firebase/firebaseConfig';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\n\nconst baseUrl = process.env.NEXT_APP_API_URL || 'http://localhost:8000/api/';\n\nexport async function getUsers(userid: string) {\n    const response = await fetch(`${baseUrl}users/${userid}/`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer some-token`, \n        },\n    });\n    if (!response.ok) {\n        throw new Error('Failed to fetch users');\n    }\n    return response.json();\n}\n\nexport async function updateUserData(userData: any ) {\n    const response = await fetch(`${baseUrl}updateUsers/`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: \n                `Bearer some-token`,\n        },\n        body: JSON.stringify(userData),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to update user data');\n    }\n    return response.json();\n}\n\nexport async function loginUser(email: string, password: string) {\n  const response = await fetch(`${baseUrl}login/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Login failed');\n  }\n\n  return response.json(); \n}"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AAKrD,MAAM,UAAU,QAAQ,GAAG,CAAC,gBAAgB,IAAI;AAEzC,eAAe,SAAS,MAAc;IACzC,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE;QACvD,QAAQ;QACR,SAAS;YACL,gBAAgB;YAChB,eAAe,CAAC,iBAAiB,CAAC;QACtC;IACJ;IACA,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,eAAe,QAAa;IAC9C,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,YAAY,CAAC,EAAE;QACnD,QAAQ;QACR,SAAS;YACL,gBAAgB;YAChB,eACI,CAAC,iBAAiB,CAAC;QAC3B;QACA,MAAM,KAAK,SAAS,CAAC;IACzB;IACA,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,UAAU,KAAa,EAAE,QAAgB;IAC7D,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;QAC/C,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAS;IACzC;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI;QACrC,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI;IACvC;IAEA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/felixtan/Documents/Ebddy%20project/my-monorepo/apps/frontend/src/store/userSlice.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getUsers, updateUserData, loginUser as loginUserApi } from '../apis/users';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\ninterface UserState {\n  user: any;\n  loading: boolean;\n  error: string | null;\n  userData: User | null;\n  updateStatus: 'idle' | 'loading' | 'succeeded' | 'failed';\n  loginStatus?: 'idle' | 'loading' | 'succeeded' | 'failed';\n}\n\nconst initialState: UserState = {\n  user: null,\n  loading: false,\n  error: null,\n  userData: null,\n  updateStatus: 'idle',\n  loginStatus: 'idle',\n};\n\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (userId: string) => {\n  const response = await getUsers(userId);\n  return response;\n});\n\nexport const updateUser = createAsyncThunk('user/updateUser', async (userData: any) => {\n  const response = await updateUserData(userData);\n  return response;\n});\n\nexport const loginUser = createAsyncThunk(\n  'user/loginUser',\n  async ({ email, password }: { email: string; password: string }, thunkAPI) => {\n    try {\n      const response = await loginUserApi(email, password);\n      return response;\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(fetchUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Failed to fetch user';\n      })\n      .addCase(updateUser.pending, (state) => {\n        state.updateStatus = 'loading';\n        state.error = null;\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.updateStatus = 'succeeded';\n        state.user = action.payload;\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.updateStatus = 'failed';\n        state.error = action.error.message || 'Failed to update user';\n      })\n      .addCase(loginUser.rejected, (state) => {\n        state.loginStatus = 'failed';\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loginStatus = 'succeeded';\n        state.user = action.payload;\n      });\n  },\n});\n\nexport default userSlice.reducer;\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;AACrD;AACA;;;AAiBA,MAAM,eAA0B;IAC9B,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,cAAc;IACd,aAAa;AACf;AAEO,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,kBAAkB,OAAO;IACjE,MAAM,WAAW,MAAM,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE;IAChC,OAAO;AACT;AAEO,MAAM,aAAa,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,mBAAmB,OAAO;IACnE,MAAM,WAAW,MAAM,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IACtC,OAAO;AACT;AAEO,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EACtC,kBACA,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAuC,EAAE;IAC/D,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,wIAAA,CAAA,YAAY,AAAD,EAAE,OAAO;QAC3C,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,OAAO,SAAS,eAAe,CAAC,MAAM,OAAO;IAC/C;AACF;AAGF,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAc,OAAO;QACnB,QACG,OAAO,CAAC,UAAU,OAAO,EAAE,CAAC;YAC3B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,UAAU,QAAQ,EAAE,CAAC,OAAO;YACnC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC,GACC,OAAO,CAAC,WAAW,OAAO,EAAE,CAAC;YAC5B,MAAM,YAAY,GAAG;YACrB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,OAAO;YACrC,MAAM,YAAY,GAAG;YACrB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,WAAW,QAAQ,EAAE,CAAC,OAAO;YACpC,MAAM,YAAY,GAAG;YACrB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC,GACC,OAAO,CAAC,UAAU,QAAQ,EAAE,CAAC;YAC5B,MAAM,WAAW,GAAG;YACpB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,WAAW,GAAG;YACpB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B;IACJ;AACF;uCAEe,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/felixtan/Documents/Ebddy%20project/my-monorepo/apps/frontend/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,6IAAA,CAAA,UAAW;IACnB;AACF","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/felixtan/Documents/Ebddy%20project/my-monorepo/apps/frontend/src/app/providers.tsx"],"sourcesContent":["'use client';\n\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,yIAAA,CAAA,QAAK;kBAAG;;;;;;AAClC","debugId":null}}]
}